package gui;

import javax.swing.JFileChooser;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import tasks.MapReduceTasks;

/**
 *
 * @author JuanJoo
 */
public class frmMain extends javax.swing.JFrame {

    // Constantes para las rutas de los archivos de entrada
    private static final String DIRFILE1 = "/weblog.txt";
    private static final String DIRFILE2 = "/JCMB_last31days.csv";
    private static final String DIRFILE3 = "/happiness.txt";
    // Constantes para la interfaz de usuario
    private final String SELECT_PROMPT = "Seleccione...";
    private final String[] TASKS = {SELECT_PROMPT,
        "Task 1: 404 Requests",
        "Task 2: GIF Requests",
        "Task 3: Hourly Access",
        "Task 4: Temperature Difference",
        "Task 5: Rainfall Filter",
        "Task 6: Min/Max Temperature",
        "Task 7: Sad Words"};
    private String nameTaks;

    ;

    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
        fillComboBoxes();
    }

    // Método para llenar el combobox de tareas
    private void fillComboBoxes() {
        // Limpiar y llenar cmbInputFiles
        cmbTasks.removeAllItems();
        for (String task : TASKS) {
            cmbTasks.addItem(task);
        }
    }

    // Método para seleccionar el directorio de salida
    private void findDirOutputFile() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.setDialogTitle("Seleccionar Directorio");

        int result = fileChooser.showOpenDialog(frmMain.this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            if (selectedFile != null) {
                int taskNum = cmbTasks.getSelectedIndex();

                String fileName = "Result_Task_" + taskNum + ".txt";
                String outputPath = selectedFile.getAbsolutePath() + File.separator + fileName;

                txtOutputFile.setText(outputPath);
            } else {
                txtOutputFile.setText("");
            }
        }
    }

    // Método para validar que todos los campos necesarios estén llenos
    private boolean isEmpty() { //Valida si los campos estan vacios
        boolean estado = false;
        if (SELECT_PROMPT.equals(cmbTasks.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(this, "Seleccione la tarea a ejecutar.",
                    "Campos incompletos", JOptionPane.WARNING_MESSAGE);
            estado = true;
        } else if (Integer.parseInt(numNodes.getValue().toString()) == 0) {
            JOptionPane.showMessageDialog(this, "Especifique el número de nodos.",
                    "Campos incompletos", JOptionPane.WARNING_MESSAGE);
            estado = true;
        } else if ("".equals(txtOutputFile.getText())) {
            JOptionPane.showMessageDialog(this, "Seleccione un directorio para el archivo de salida.",
                    "Campos incompletos", JOptionPane.WARNING_MESSAGE);
            estado = true;
        }
        return estado;
    }

    // Método para limpiar los campos de la interfaz
    private void clear() {
        fillComboBoxes();
        numNodes.setValue(0);
        txtInputFile.setText("");
        txtOutputFile.setText("");
    }

    // Método para ejecutar la tarea seleccionada
    private void executeTask(int index) throws IOException {
        String inputFile = txtInputFile.getText();
        String outputFile = txtOutputFile.getText();
        int nNodes = Integer.parseInt(numNodes.getValue().toString());
        switch (index) {
            case 1 ->
                MapReduceTasks.executeTask1(inputFile, outputFile, nNodes, this);
            case 2 ->
                MapReduceTasks.executeTask2(inputFile, outputFile, nNodes, this);
            case 3 ->
                MapReduceTasks.executeTask3(inputFile, outputFile, nNodes, this);
            case 4 ->
                MapReduceTasks.executeTask4(inputFile, outputFile, nNodes, this);
            case 5 ->
                MapReduceTasks.executeTask5(inputFile, outputFile, nNodes, this);
            case 6 ->
                MapReduceTasks.executeTask6(inputFile, outputFile, nNodes, this);
            case 7 ->
                MapReduceTasks.executeTask7(inputFile, outputFile, nNodes, this);
            default ->
                throw new AssertionError();
        }
    }

    // Mostrar resultados de las tareas
    public void appendText(String text) {
        txtLog.append(text + "\n");
    }

    public String getNameTaks() {
        return nameTaks;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cmbTasks = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        numNodes = new javax.swing.JSpinner();
        txtOutputFile = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnFindDir = new javax.swing.JButton();
        txtInputFile = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        btnRun = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("HADOOP MINI");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tareas"));

        jLabel4.setText("Tarea a Ejecutar:");

        cmbTasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTasksActionPerformed(evt);
            }
        });

        jLabel5.setText("Numero de Nodos:");

        txtOutputFile.setBackground(new java.awt.Color(255, 255, 204));
        txtOutputFile.setEnabled(false);

        jLabel6.setText("Archivo de Salida:");

        btnFindDir.setText("...");
        btnFindDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindDirActionPerformed(evt);
            }
        });

        txtInputFile.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtInputFile.setEnabled(false);

        jLabel3.setText("Archivo de Entrada:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtOutputFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFindDir))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numNodes, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 77, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTasks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(numNodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnFindDir))
                .addContainerGap())
        );

        btnExit.setText("Salir");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnRun.setText("Ejecutar");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("By GRUPO # 6");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Mostrar Resultados"));

        txtLog.setColumns(20);
        txtLog.setRows(5);
        txtLog.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtLog.setEnabled(false);
        jScrollPane1.setViewportView(txtLog);

        btnClear.setText("Limpiar");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnClear)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRun)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExit))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnExit)
                        .addComponent(btnRun))
                    .addComponent(jLabel2))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
        try {
            if (!isEmpty()) {
                nameTaks = cmbTasks.getSelectedItem().toString();
                executeTask(cmbTasks.getSelectedIndex());
                JOptionPane.showMessageDialog(this, "Tarea ejecutada exitosamente.",
                        "Info", JOptionPane.INFORMATION_MESSAGE);
                clear();
            }
        } catch (IOException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRunActionPerformed

    private void btnFindDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindDirActionPerformed
        if (SELECT_PROMPT.equals(cmbTasks.getSelectedItem().toString()))
            JOptionPane.showMessageDialog(this, "Seleccione la tarea a ejecutar.",
                    "Campos incompletos", JOptionPane.WARNING_MESSAGE);
        else
            findDirOutputFile();
    }//GEN-LAST:event_btnFindDirActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        dispose(); // Cierra este formulario
        System.exit(0); // Termina la aplicación
    }//GEN-LAST:event_btnExitActionPerformed

    private void cmbTasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTasksActionPerformed
        switch (cmbTasks.getSelectedIndex()) {
            case 0 ->
                txtInputFile.setText("");
            case 1, 2, 3 ->
                txtInputFile.setText(DIRFILE1);
            case 4, 5, 6 ->
                txtInputFile.setText(DIRFILE2);
            case 7 ->
                txtInputFile.setText(DIRFILE3);
            default -> {
            }
        }
        txtOutputFile.setText("");
    }//GEN-LAST:event_cmbTasksActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtLog.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFindDir;
    private javax.swing.JButton btnRun;
    private javax.swing.JComboBox<String> cmbTasks;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner numNodes;
    private javax.swing.JTextField txtInputFile;
    private javax.swing.JTextArea txtLog;
    private javax.swing.JTextField txtOutputFile;
    // End of variables declaration//GEN-END:variables
}
